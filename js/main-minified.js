"use strict"; let mySpan = document.querySelector("span[class ='top_button']"); function showTopButton() { this.scrollY >= 650 ? mySpan.classList.add("show_button") : mySpan.classList.remove("show_button") } window.addEventListener("scroll", showTopButton), mySpan.onclick = function () { window.scrollTo({ top: 0, behavior: "smooth" }) }, window.onload = checkThemeFromLocal; let tabs = document.querySelectorAll(".tabs li"), content = document.querySelectorAll(".projects .card"); function hide(e) { e.classList.remove("img-expend"), e.classList.add("img-shrink"), document.body.style.overflowY = "none", console.log(document.body) } function show(e) { e.classList.add("img-expend"), e.classList.remove("img-shrink"), document.body.style.overflowY = "hidden" } tabs.forEach(e => { e.addEventListener("click", function (e) { tabs.forEach(e => { e.classList.remove("active") }), e.currentTarget.classList.add("active"); let t = Array.from(document.querySelectorAll(`${e.currentTarget.dataset.cate}`)); content.forEach(e => { hide(e) }), content.forEach(e => { t.includes(e) ? show(e) : hide(e) }) }) }); let list = document.querySelectorAll(".list"); function activeLink() { list.forEach(e => { e.classList.remove("active") }) } list.forEach(e => { e.addEventListener("click", activeLink) }); const sections = document.querySelectorAll(".section"); window.addEventListener("scroll", () => { let e = null; sections.forEach(t => { let s = t.getBoundingClientRect().top, a = t.getBoundingClientRect().bottom; s <= window.innerHeight / 2 && a >= window.innerHeight / 2 && (e = t.id) }), e && list.forEach(t => { t.hasAttribute(`${e}`) ? t.classList.add("active") : t.classList.remove("active") }) }); let icons = Array.from(document.querySelectorAll(".tool ")), colorfulImgs = ['<img src="images/html-c.svg" alt="html-logo" />', '<img src="images/css-c.svg" alt="css-logo" />', '<img src="images/javascript-c.svg" alt="javascript-logo" />', '<img src="images/typescript-c.svg" alt="typescript-logo" />', '<img src="images/reactjs-c.svg" alt="reactjs-logo" />', '<img src="images/redux-c.svg" alt="redux-logo" />', '<img src="images/bootstrap-c.svg" alt="bootstrap-logo" />', '<img src="images/tailwind-css-c.png" alt="tailwind-css-logo" />', '<img src="images/git-c.svg" alt="Git-logo" />', '<img src="images/github-c.svg" alt="GitHub-logo" />', '<img src="images/vs-code-c.svg" alt="vs-code-logo" />', '<img src="images/database-c.png" alt="database-logo" />', '<img src="images/cpp-c.svg" alt="database-logo" />', '<img src="images/cSharp-c.svg" alt="cSharp-logo" />', '<img src="images/postman-c.svg" alt="postman-logo" />',], darkImgs = ['<img src="images/html.svg" alt="html-logo" />', '<img src="images/css.svg" alt="css-logo" />', '<img src="images/javascript.svg" alt="javascript-logo" />', '<img src="images/typescript.svg" alt="typescript-logo" />', '<img src="images/reactjs.svg" alt="reactjs-logo" />', '<img src="images/redux.svg" alt="redux-logo" />', '<img src="images/bootstrap.svg" alt="bootstrap-logo" />', '<img src="images/tailwind-css.png" alt="tailwind-css-logo" />', '<img src="images/git.svg" alt="Git-logo" />', '<img src="images/github.svg" alt="GitHub-logo" />', '<img src="images/vs-code.png" alt="vs-code-logo" />', '<img src="images/database.png" alt="database-logo" />', '<img src="images/cpp.svg" alt="database-logo" />', '<img src="images/cSharp.svg" alt="cSharp-logo" />', '<img src="images/postman.svg" alt="postman-logo" />',], lightImages = ['<img src="images/html-w.svg" alt="html-logo" />', '<img src="images/css-w.svg" alt="css-logo" />', '<img src="images/javascript-w.svg" alt="javascript-logo" />', '<img src="images/typescript-w.svg" alt="typescript-logo" />', '<img src="images/reactjs-w.svg" alt="reactjs-logo" />', '<img src="images/redux-w.svg" alt="redux-logo" />', '<img src="images/bootstrap-w.svg" alt="bootstrap-logo" />', '<img src="images/tailwind-css-w.svg" alt="tailwind-css-logo" />', '<img src="images/git-w.svg" alt="Git-logo" />', '<img src="images/github-w.svg" alt="GitHub-logo" />', '<img src="images/vs-code-w.svg" alt="vs-code-logo" />', '<img src="images/database-w.png" alt="database-logo" />', '<img src="images/cpp-w.svg" alt="database-logo" />', '<img src="images/cSharp-w.svg" alt="cSharp-logo" />', '<img src="images/postman-w.svg" alt="postman-logo" />',]; function changeIcons(e) {
    for (let t = 0; t < icons.length; t++) {
        let s = icons[t].children[1].innerHTML; icons[t].innerHTML = `${e[t]}
    <p>${s}</p>
    `}
} let settingButton = document.querySelector(".setting-icon"), settingButtonI = document.querySelector(".setting-icon"), settingSec = document.querySelector(".setting-sec"), themes = document.querySelectorAll(".theme"), arrOfThemeIcons = document.querySelectorAll(".theme span"), landImg = document.querySelector(".land-img"), skiImg = document.querySelector(".ski-img"), conImg = document.querySelector(".con-img"); function changeSettingIcon() { settingButtonI.classList.contains("fa-gear") ? (settingButtonI.classList.remove("fa-gear"), settingButtonI.classList.add("fa-xmark")) : (settingButtonI.classList.remove("fa-xmark"), settingButtonI.classList.add("fa-gear")) } function checkThemeFromLocal() { "colorful-theme" === window.localStorage.getItem("portfolioTheme") ? changeToTheme1() : "dark-theme" === window.localStorage.getItem("portfolioTheme") ? changeToTheme2() : "light-theme" === window.localStorage.getItem("portfolioTheme") ? changeToTheme3() : changeToTheme1(), themes.forEach(e => { e.classList.remove("active") }), themes.forEach(e => { e.classList.contains(`${window.localStorage.getItem("portfolioTheme")}`) && e.classList.add("active") }) } function changeColorsVariables(e, t) { for (let s = 0; s < e.length; s++)document.documentElement.style.setProperty(`${e[s]}`, `${t[s]}`) } settingButton.addEventListener("click", function () { settingSec.classList.toggle("hide-sec"), changeSettingIcon() }), document.addEventListener("click", function (e) { !settingSec.contains(e.target) && settingSec.classList.contains("hide-sec") && (settingSec.classList.remove("hide-sec"), changeSettingIcon()) }); let colorVariables = ["--master-color", "--second-color", "--third-color", "--fourth-color", "--fifth-color", "--hight-contrast", "--text-color",], theme1Colors = ["#03042a", "#a7c5f1", "#cc8fac", "#4b4584", "#210d49", "#140d36", "#f7f7f7",], theme2Colors = ["#0a0a0c", "#2b1f1a", "#ddd", "#ff9d9d", "#795548", "#121212", "#f7f7f7",], theme3Colors = ["#eee", "#001910", "#121212", "#101010", "#eeeeee", "#ecebec", "#000000",]; function changeThemeImages(e) { landImg.innerHTML = `<img src="images/landing${e}.svg" alt="landing-page-image"/>`, skiImg.innerHTML = `<img src="images/skills${e}.svg" alt="skills-image"/>`, conImg.innerHTML = `<img src="images/contact${e}.svg" alt="contact-image"/>` } function changeToTheme1() { changeColorsVariables(colorVariables, theme1Colors), changeThemeImages(1), changeIcons(colorfulImgs) } function changeToTheme2() { changeColorsVariables(colorVariables, theme2Colors), changeThemeImages(2), changeIcons(lightImages) } function changeToTheme3() { changeColorsVariables(colorVariables, theme3Colors), changeThemeImages(2), changeIcons(darkImgs) } function triggerThemes(e) { "theme1" === e.currentTarget.classList[0] ? (setTimeout(changeToTheme1, 100), window.localStorage.setItem("portfolioTheme", "colorful-theme")) : "theme2" === e.currentTarget.classList[0] ? (setTimeout(changeToTheme2, 100), window.localStorage.setItem("portfolioTheme", "dark-theme")) : (setTimeout(changeToTheme3, 100), window.localStorage.setItem("portfolioTheme", "light-theme")) } themes.forEach(e => { e.addEventListener("click", function (e) { themes.forEach(e => { e.classList.remove("active") }), e.currentTarget.classList.add("active"), triggerThemes(e) }) }); let myProjects = Array.from(document.querySelectorAll(".card")), myImgs = Array.from(document.querySelectorAll(".card img")); function animateUp(e) { e.style.top = "0%" } function stopScrolling(e) { document.body.style.overflowY = e ? "hidden" : "scroll" } function animateDown(e) { e.style.top = "150%" } document.addEventListener("click", function (e) { if (e.target.classList.contains("preview-window")) animateDown(e.target), stopScrolling(!1), setTimeout(() => { e.target.remove() }, 450); else { if (!e.target.classList.contains("preview-img")) return 0; animateDown(e.target.parentElement), stopScrolling(!1), setTimeout(() => { e.target.parentElement.remove() }, 450) } }), myProjects.forEach(function (e) { e.addEventListener("click", function (e) { if (!("none" == e.target.classList || e.target.parentElement.classList.contains("no-preview"))) { let t = document.createElement("div"); t.classList = "preview-window"; let s = this.children[0].cloneNode(!0); s.classList = "preview-img", t.appendChild(s), document.body.appendChild(t), setTimeout(() => { animateUp(t), stopScrolling(!0) }, 0) } }) }); let nameInput = document.getElementById("name"), emailInput = document.getElementById("email"), subjectInput = document.getElementById("subject"), detailsInput = document.getElementById("details"), submitBtn = document.querySelector(".submit-btn"), myInputs = [nameInput, emailInput, subjectInput, detailsInput]; function changeLanguageForElements(e) { let t = document.querySelectorAll("[data-en], [data-es]"); t.forEach(t => { t.textContent = t.getAttribute(`data-${e}`) }) } function saveLanguagePreference(e) { localStorage.setItem("preferredLanguage", e) } function loadLanguagePreference() { let e = localStorage.getItem("preferredLanguage"); "ar" == e ? document.querySelectorAll(".language-sec .tabs > input")[0].click() : document.querySelectorAll(".language-sec .tabs > input")[1].click(), setLanguageClassForElements() } function changeDefaultRadioBtn(e) { let t = document.querySelectorAll(".language-sec .tabs > input"); "ar" == e ? t[0].checked = !0 : t[1].checked = !0 } function changeFontForTheEntirePage(e) { "ar" == e ? document.body.style.fontFamily = '"Cairo", sans-serif' : document.body.style.fontFamily = "Poppins, sans-serif !important" } function changeDirectionForTheEntirePage(e) { "ar" == e ? document.body.style.direction = "rtl" : document.body.style.direction = "ltr" } function toggleSocialClass() { let e = document.querySelector(".social"); if (localStorage.getItem("preferredLanguage") == e.classList[1].toLowerCase()) return; let t = [...document.querySelectorAll(".hi-sec, .my-CV, .contact, nav"), e]; e.classList.contains("ar") && !e.classList.contains("en") ? t.forEach(e => { toggleClass(e, "ar", "en") }) : t.forEach(e => { toggleClass(e, "en", "ar") }) } function setLanguageClassForElements() { let e = localStorage.getItem("preferredLanguage"), t = [...document.querySelectorAll(".hi-sec, .my-CV, .contact, nav")]; "ar" == e ? t.forEach(e => { toggleClass(e, "en", "ar") }) : t.forEach(e => { toggleClass(e, "ar", "en") }) } function toggleClass(e, t, s) { e.classList.remove(t), e.classList.add(s) } myInputs.forEach(e => { e.oninput = function () { "" === e.value || 0 === e.value.length ? submitBtn.classList.add("disabled") : submitBtn.classList.remove("disabled") } }), document.getElementById("year").innerHTML = new Date().getFullYear(), document.addEventListener("DOMContentLoaded", loadLanguagePreference), document.querySelectorAll(".language-sec .tabs > input").forEach(e => { e.addEventListener("click", e => { let t = e.target.value.toLowerCase(); changeLanguageForElements(t), changeDirectionForTheEntirePage(t), changeFontForTheEntirePage(t), saveLanguagePreference(t), toggleSocialClass() }) });